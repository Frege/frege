module UsePureFunction where

data PureFunctionImpl t r = PureFunctionImpl
  { apply :: PureFunction t r -> t -> r
  }

data PureFunction t r = pure native java.util.function.Function where
  pure native apply :: PureFunction t r -> t -> r
  pure native new "extends" :: PureFunctionImpl t r -> PureFunction t r

main = do
    let pf = PureFunction.new PureFunctionImpl { apply = \_ -> Int.succ }
    println $ "This should hold: 2 == " ++ show (pf.apply 1)
